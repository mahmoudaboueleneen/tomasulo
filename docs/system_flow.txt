Clock Cycle:
------------
-1. Read instructions and load them into Instruction Cache.


0. Fetch instruction from Instruction Cache into Instruction Queue.


1. (Issue & Read Operands)

   a) Before Issuing:
      Decode Instruction.
      If no Structural Hazard (availability of structure to carry out the operation/there's space in Buffer/Station)
      && In case of Load there is no Store manipulating the same address in the Buffers

      Then, Issue Instruction to its Buffer/Station,
      Set the Buffer/Station to busy,
      Update the Qi field in the Register file for the Instruction's Destination Register with the tag of the Buffer/Station that the Instruction has been added to,
      Add to a Hash Map ==> K: Tag of the Buffer/Station, V: Cycle Number that it's issued in.
      
   b) If Load instruction, skip the next check (as effective addresses are assumed already given so no need to check registers)
      Check Operand Registers in the Register File:
      If the Operand Registers are free (their Qi = 0) then copy the value to Vj/Vk.
      Else, copy the Buffer/Station tag responsible for this Operand from Qi in the Register File to Qj/Qk.


2. (Execute)

   For each Station, if it has Vj and Vk ready, Execute.
   For each Buffer, if memory is not busy, Execute.
   Each instruction keeps executing according to its required number of cycles to finish.
   If it's a Store, wait for the value to be stored to be ready before Executing.


3. (Write Result)

   Write Result by broadcasting the result to all the Stations/Buffers and Register File(s) if the instruction cycles have reached the required number of cycles to finish.
   If more than one instruction trying to write, compare their issued time/cycle from the hashmap perform Write Result for the instruction with the lower issued time/cycle (FIFO).

   After writing:
   Remove the instruction from its Buffer/Station.
   Unset the busy status.
   Update all Stations that need the value by moving from Qj/Qk to Vj/Vk.
   Update all Registers that need the value by adding the value into the contents field of the Register, and setting Qi to 0.
   Update all Store Buffers that need the value by moving from Q to V.
   Load Buffers don't need updating as they only have address.

--------------------------------------------------------------------------------
vars to track: clockCycleNumber, cyclesLeft (for each instruction)